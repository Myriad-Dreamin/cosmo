
import "@lib/c++/cstdint"
import "@lib/c++/memory"
import "@lib/c++/variant"
import "@lib/c++/tuple"
import cSys from "@lib/c++/cstdlib"

code("""
using float32_t = float;
using float64_t = double;
using float128_t = long double;

namespace cosmo {
template<typename T, typename I, bool isMut = false, typename Cond = void>
struct Impl;
} // namespace cosmo

""");

def unreachable(): Nothing = {
  code("""
  fprintf(stderr, "unreachable\n");
  """)
  cSys.abort();
}

def unimplemented(): Nothing = {
  code("""
  fprintf(stderr, "unimplemented\n");
  """)
  cSys.abort();
}
