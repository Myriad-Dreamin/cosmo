
import std::io;

trait Formatter {
  def write(&mut self, s: &str): io::Result(());
}

impl Formatter for String {
  def write(&mut self, s: &str): io::Result(()) = {
    self.push_str(s);
    Ok()
  }
}

trait Display {
  def display(&self, f: &mut Formatter): io::Result(());
}

impl Display for bool {
  def display(&self, f: &mut Formatter): io::Result(()) = {
    if (*self) {
      f.write("true")
    } else {
      f.write("false")
    }
  }
}

def mprintln(t: &Display) = {
  var s = String();
  t.display(s.as_mut()).unwrap();
  println(s);
}

def main() = {
  mprintln(bool <: Display);
}
