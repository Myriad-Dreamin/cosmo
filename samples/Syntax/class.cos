
@noCore();

class Cls0 {}

class Cls1 {
  val a = 1;
}

class Cls2 {
  def a = 1;
}

class Cls3 {
  def method(a) = a;
}

class Cls4 {
  def method[T]: T = T();
}

class Cls5 {
  def method[T](a): T = a;
}

class Cls6[T] {
  def method(a): T = a;
}


class Cls7 {
  case Zero
}

class Cls8 {
  case Zero
  case Succ(Nat)
}

class Cls9 {
  case Zero
  case Succ(n: Nat)
}

class Nat {
  case Zero => {
    def cons = Zero();
  }
  case Succ(Nat) => {
    def cons = Succ(Nat.Zero);
  }
}

trait DoMethod[T] {
  def method(a: T): T = a;
}
